# -*- coding: utf-8 -*-
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import proto

from google.cloud.bigtable_admin_v2.types import bigtable_table_admin

__protobuf__ = proto.module(
    package="google.bigtable.admin.v2",
    manifest={
        "WaitForConsistencyRequest",
    },
)


# The WaitForConsistencyRequest object is not a real proto. It is a wrapper
# class intended for the handwritten method wait_for_consistency. It is
# constructed by extending a Proto Plus message class to get a developer
# experience closest to that of an autogenerated GAPIC method, and to allow
# developers to manipulate the wrapper class like they would a request proto
# for an autogenerated call.
class WaitForConsistencyRequest(proto.Message):
    """Wrapper class for encapsulating parameters for the `wait_for_consistency` method in both
    :class:`google.cloud.bigtable_admin_v2.overlay.services.bigtable_table_admin.client.BigtableTableAdminClient`
    and :class:`google.cloud.bigtable_admin_v2.overlay.services.bigtable_table_admin.async_client.BigtableTableAdmiAsyncClient`.


    This message has `oneof`_ fields (mutually exclusive fields).
    For each oneof, at most one member field can be set at the same time.
    Setting any member of the oneof automatically clears all other
    members.

    .. _oneof: https://proto-plus-python.readthedocs.io/en/stable/fields.html#oneofs-mutually-exclusive-fields

    Attributes:
        name (str):
            Required. The unique name of the Table for which to check
            replication consistency. Values are of the form
            ``projects/{project}/instances/{instance}/tables/{table}``.
        standard_read_remote_writes (google.cloud.bigtable_admin_v2.types.StandardReadRemoteWrites):
            Checks that reads using an app profile with
            ``StandardIsolation`` can see all writes committed before
            the token was created, even if the read and write target
            different clusters.

            This field is a member of `oneof`_ ``mode``.
        data_boost_read_local_writes (google.cloud.bigtable_admin_v2.types.DataBoostReadLocalWrites):
            Checks that reads using an app profile with
            ``DataBoostIsolationReadOnly`` can see all writes committed
            before the token was created, but only if the read and write
            target the same cluster.

            This field is a member of `oneof`_ ``mode``.
    """

    name: str = proto.Field(proto.STRING, number=1)
    standard_read_remote_writes: bigtable_table_admin.StandardReadRemoteWrites = (
        proto.Field(
            proto.MESSAGE,
            number=2,
            oneof="mode",
            message=bigtable_table_admin.StandardReadRemoteWrites,
        )
    )
    data_boost_read_local_writes: bigtable_table_admin.DataBoostReadLocalWrites = (
        proto.Field(
            proto.MESSAGE,
            number=3,
            oneof="mode",
            message=bigtable_table_admin.DataBoostReadLocalWrites,
        )
    )
