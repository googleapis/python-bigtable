# Copyright 2025 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import importlib

import pytest


@pytest.mark.parametrize(
    "module", ["google.cloud.bigtable_admin", "google.cloud.bigtable_admin_v2"]
)
def test_admin_overlay_imports(module):
    # Simulate from <module> import <class> dynamically using importlib
    mod = importlib.import_module(module)

    # Check that the import aliasing works as expected for overlay/autogenerated clients/types.
    classes_to_modules = {
        "BigtableTableAdminClient": "google.cloud.bigtable_admin_v2.overlay.services.bigtable_table_admin.client",
        "RestoreTableOperation": "google.cloud.bigtable_admin_v2.overlay.types.restore_table",
        "BigtableInstanceAdminClient": "google.cloud.bigtable_admin_v2.services.bigtable_instance_admin.client",
        "RestoreTableRequest": "google.cloud.bigtable_admin_v2.types.bigtable_table_admin",
    }

    for cls_name, submodule_name in classes_to_modules.items():
        cls = getattr(mod, cls_name)
        submodule = importlib.import_module(submodule_name)
        assert cls == getattr(submodule, cls_name)

        # Check that from <module> import * has the class inside.
        assert cls_name in mod.__all__
